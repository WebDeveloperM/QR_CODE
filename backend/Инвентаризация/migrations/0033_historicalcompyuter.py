# Generated by Django 4.2 on 2025-03-26 03:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Инвентаризация', '0032_remove_compyuter_mfo_compyuter_mfo'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalCompyuter',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('seal_number', models.CharField(max_length=255, verbose_name='Номер пломбы')),
                ('user', models.CharField(blank=True, max_length=255, null=True, verbose_name='Пользователь')),
                ('ipadresss', models.CharField(blank=True, max_length=255, null=True, verbose_name='IPv4 адрес')),
                ('mac_adress', models.CharField(blank=True, max_length=255, null=True, verbose_name='Физический(MAC) адрес')),
                ('qr_image', models.TextField(blank=True, default='qr_codes/default.png', max_length=100, null=True, verbose_name='QR-код')),
                ('bg_image', models.TextField(blank=True, default='back.jpg', max_length=100, null=True, verbose_name='QR-код')),
                ('internet', models.BooleanField(blank=True, default=False, null=True, verbose_name='Интернет')),
                ('joinDate', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Дате')),
                ('updatedAt', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Дата изменения')),
                ('slug', models.SlugField(blank=True)),
                ('isActive', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('CPU', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.cpu', verbose_name='Процессор')),
                ('GPU', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.gpu', verbose_name='Видеокарта')),
                ('HDD', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.hdd', verbose_name='Диск  HDD')),
                ('RAMSize', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.ramsize', verbose_name='Размер оперативной памяти')),
                ('RAM_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.ramtype', verbose_name='Тип оперативки')),
                ('SSD', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.ssd', verbose_name='Диск  SSD')),
                ('addedUser', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
                ('departament', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.department', verbose_name='Цех')),
                ('disk_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.disktype', verbose_name='Тип диска')),
                ('frequency', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.frequency', verbose_name='Частота процессора')),
                ('generation', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.generation', verbose_name='Поколение процессора')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('motherboard', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.motherboard', verbose_name='Производитель МП')),
                ('motherboard_model', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.motherboardmodel', verbose_name='Модель МП')),
                ('type_compyuter', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.typecompyuter', verbose_name='Тип орг.техники')),
                ('updatedUser', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Изменил')),
                ('warehouse_manager', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Инвентаризация.warehousemanager', verbose_name='Зав. склада')),
            ],
            options={
                'verbose_name': 'historical Компьютеры ',
                'verbose_name_plural': 'historical Компьютеры',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
