# Generated by Django 4.2 on 2025-02-11 11:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Процессор ',
                'verbose_name_plural': '1.4 Процессор',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название цеха')),
                ('boss_fullName', models.CharField(max_length=255, verbose_name='Руководитель цеха')),
            ],
            options={
                'verbose_name': 'Цех ',
                'verbose_name_plural': 'Цех',
            },
        ),
        migrations.CreateModel(
            name='DiskType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип диска ',
                'verbose_name_plural': '2.5 Тип диска',
            },
        ),
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Частота процессора ',
                'verbose_name_plural': '1.6 Частота процессора',
            },
        ),
        migrations.CreateModel(
            name='Generation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Поколение процессора ',
                'verbose_name_plural': '1.5 Поколение процессора',
            },
        ),
        migrations.CreateModel(
            name='GPU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Видеокарта ',
                'verbose_name_plural': '2 Видеокарта',
            },
        ),
        migrations.CreateModel(
            name='HDD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Нет', max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Диск  HDD ',
                'verbose_name_plural': '1.7 Диск  HDD',
            },
        ),
        migrations.CreateModel(
            name='ModelWebCamera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Модель вебкамеры ',
                'verbose_name_plural': '2.4 Модель вебкамеры',
            },
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Монитор ',
                'verbose_name_plural': '2.5 Монитор',
            },
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Производитель МП ',
                'verbose_name_plural': '1.2 Производитель МП',
            },
        ),
        migrations.CreateModel(
            name='MotherboardModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Модель МП ',
                'verbose_name_plural': '1.3 Модель МП',
            },
        ),
        migrations.CreateModel(
            name='Printer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Принтер ',
                'verbose_name_plural': '2.1 Принтер',
            },
        ),
        migrations.CreateModel(
            name='RAMSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Размер оперативной памяти ',
                'verbose_name_plural': '1.9 Размер оперативной памяти',
            },
        ),
        migrations.CreateModel(
            name='RAMType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип оперативки ',
                'verbose_name_plural': '2.5 Тип оперативки',
            },
        ),
        migrations.CreateModel(
            name='Scaner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Сканер ',
                'verbose_name_plural': '2.2 Сканер',
            },
        ),
        migrations.CreateModel(
            name='SSD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Нет', max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Диск  SSD ',
                'verbose_name_plural': '1.8 Диск  SSD',
            },
        ),
        migrations.CreateModel(
            name='TypeCompyuter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип орг.техники ',
                'verbose_name_plural': '1.1 Тип орг.техники',
            },
        ),
        migrations.CreateModel(
            name='TypeWebCamera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип вебкамера ',
                'verbose_name_plural': '2.3 Тип вебкамера',
            },
        ),
        migrations.CreateModel(
            name='WarehouseManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Зав. склада ',
                'verbose_name_plural': '1.1 Зав. склада',
            },
        ),
        migrations.CreateModel(
            name='Compyuter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seal_number', models.CharField(max_length=255, verbose_name='Номер пломбы')),
                ('user', models.CharField(max_length=255, verbose_name='Пользователь')),
                ('ipadresss', models.CharField(max_length=255, verbose_name='IPv4 адрес')),
                ('mac_adress', models.CharField(max_length=255, verbose_name='Физический(MAC) адрес')),
                ('qr_image', models.ImageField(blank=True, null=True, upload_to='qr_codes/', verbose_name='QR-код')),
                ('signature', models.ImageField(blank=True, null=True, upload_to='signature/', verbose_name='Подпись')),
                ('joinDate', models.DateTimeField(auto_now=True, verbose_name='Дате')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('isActive', models.BooleanField(default=True)),
                ('CPU', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.cpu', verbose_name='Процессор')),
                ('GPU', models.ForeignKey(blank=True, default='Нет', null=True, on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.gpu', verbose_name='Видеокарта')),
                ('HDD', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.hdd', verbose_name='Диск  HDD')),
                ('RAMSize', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.ramsize', verbose_name='Размер оперативной памяти')),
                ('RAM_type', models.ForeignKey(default='Нет', on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.ramtype', verbose_name='Тип оперативки')),
                ('SSD', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.ssd', verbose_name='Диск  SSD')),
                ('addedUser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
                ('departament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.department')),
                ('disk_type', models.ForeignKey(default='Нет', on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.disktype', verbose_name='Тип диска')),
                ('frequency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.frequency', verbose_name='Частота процессора')),
                ('generation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.generation', verbose_name='Поколение процессора')),
                ('model_webcam', models.ForeignKey(blank=True, default='Нет', null=True, on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.modelwebcamera', verbose_name='Модель вебкамеры')),
                ('motherboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.motherboard', verbose_name='Производитель МП')),
                ('motherboard_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.motherboardmodel', verbose_name='Модель МП')),
                ('printer', models.ManyToManyField(blank=True, related_name='printer', to='Инвентаризация.printer', verbose_name='Принтеры')),
                ('scaner', models.ManyToManyField(blank=True, related_name='scaner', to='Инвентаризация.scaner', verbose_name='Сканеры')),
                ('type_compyuter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.typecompyuter', verbose_name='Тип орг.техники')),
                ('type_monitor', models.ManyToManyField(blank=True, related_name='typeMonitor', to='Инвентаризация.monitor', verbose_name='Тип Монитора')),
                ('type_webcamera', models.ManyToManyField(blank=True, related_name='typeCamera', to='Инвентаризация.typewebcamera', verbose_name='Тип вебкамера')),
                ('warehouse_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Инвентаризация.warehousemanager', verbose_name='Зав. склада')),
            ],
            options={
                'verbose_name': 'Компьютеры ',
                'verbose_name_plural': 'Компьютеры',
            },
        ),
    ]
